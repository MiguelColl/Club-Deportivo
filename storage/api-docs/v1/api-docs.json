{
  "openapi": "3.0.2",
  "info": {
    "title": "Club Deportivo API",
    "version": "1.0",
    "description": "API for managing a Sport Club"
  },
  "servers": [
    { "url": "http://club-deportivo.test/api/v1" },
    { "url": "http://127.0.0.1:8000/api/v1" }
  ],
  "components": {
    "securitySchemes": {
      "AccessToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "AccessToken": []
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "summary": "Login to API",
        "description": "Login to use API functions",
        "tags": ["Auth"],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "mike@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "mike"
                  }
                }
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get a list of users",
        "description": "Return a list of users",
        "tags": ["Users"],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "Page of the list"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "description": "Return the user created",
        "tags": ["Users"],
        "parameters": [],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Miguel"
                  },
                  "surname": {
                    "type": "string",
                    "example": "Collado"
                  },
                  "email": {
                    "type": "string",
                    "example": "mike@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "mike"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {}
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get a user by their ID",
        "description": "Return a user",
        "tags": ["Users"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "summary": "Update a user by their ID",
        "description": "Return the user updated",
        "tags": ["Users"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the user"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Miguel"
                  },
                  "surname": {
                    "type": "string",
                    "example": "Torrella"
                  },
                  "email": {
                    "type": "string",
                    "example": "mike1@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "mike"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a user by their ID",
        "description": "Return no content if deleted correctly",
        "tags": ["Users"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the user"
          }
        ],
        "responses": {
          "204": {
            "description": "No content",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/sports": {
      "get": {
        "summary": "Get a list of sports",
        "description": "Return a list of sports",
        "tags": ["Sports"],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "Page of the list"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "post": {
        "summary": "Create a new sport",
        "description": "Valid names: Tenis, Paddle, Futbol, Baloncesto, Voleibol - Return the sport created",
        "tags": ["Sports"],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Baloncesto"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/sports/{id}": {
      "get": {
        "summary": "Get a sport by their ID",
        "description": "Return a sport",
        "tags": ["Sports"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the sport"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "summary": "Update a sport by their ID",
        "description": "Return the sport updated",
        "tags": ["Sports"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the sport"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Paddle"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a sport by their ID",
        "description": "Return no content if deleted correctly",
        "tags": ["Sports"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the sport"
          }
        ],
        "responses": {
          "204": {
            "description": "No content",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/fields": {
      "get": {
        "summary": "Get a list of fields",
        "description": "Return a list of fields",
        "tags": ["Fields"],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "Page of the list"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "post": {
        "summary": "Create a new field",
        "description": "Return the field created",
        "tags": ["Fields"],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sport_id": {
                    "type": "number",
                    "example": "1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/fields/{id}": {
      "get": {
        "summary": "Get a field by their ID",
        "description": "Return a field",
        "tags": ["Fields"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the field"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "summary": "Update a field by their ID",
        "description": "Return the field updated",
        "tags": ["Fields"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the field"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sport_id": {
                    "type": "number",
                    "example": "2"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a field by their ID",
        "description": "Return no content if deleted correctly",
        "tags": ["Fields"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the field"
          }
        ],
        "responses": {
          "204": {
            "description": "No content",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/fields/search": {
      "get": {
        "summary": "Get a list of available fields for a specific day, member and sport",
        "description": "Return a list of avilable fields and their hours",
        "tags": ["Fields"],
        "parameters": [
          {
            "name": "member",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "example": "6"
            },
            "description": "ID of the member"
          },
          {
            "name": "sport",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Tenis"
            },
            "description": "Sport name - Available: Tenis, Paddle, Futbol, Baloncesto, Voleibol"
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2024-06-09"
            },
            "description": "Date to search for fields"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/members": {
      "get": {
        "summary": "Get a list of members",
        "description": "Return a list of members",
        "tags": ["Members"],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "Page of the list"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "post": {
        "summary": "Create a new member",
        "description": "Return the member created",
        "tags": ["Members"],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Pedro"
                  },
                  "surname": {
                    "type": "string",
                    "example": "García"
                  },
                  "email": {
                    "type": "string",
                    "example": "pedro@gmail.com"
                  },
                  "dni": {
                    "type": "string",
                    "example": "12345678B"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/members/{id}": {
      "get": {
        "summary": "Get a member by their ID",
        "description": "Return a member",
        "tags": ["Members"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the member"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "summary": "Update a member by their ID",
        "description": "Return the member updated",
        "tags": ["Members"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the member"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Pedro"
                  },
                  "surname": {
                    "type": "string",
                    "example": "García"
                  },
                  "email": {
                    "type": "string",
                    "example": "pedrito@gmail.com"
                  },
                  "dni": {
                    "type": "string",
                    "example": "12345678B"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a member by their ID",
        "description": "Return no content if deleted correctly",
        "tags": ["Members"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the member"
          }
        ],
        "responses": {
          "204": {
            "description": "No content",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/bookings": {
      "get": {
        "summary": "Get a list of bookings",
        "description": "Return a list of bookings",
        "tags": ["Bookings"],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "Page of the list"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "post": {
        "summary": "Create a new booking",
        "description": "Return the booking created",
        "tags": ["Bookings"],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-06-09 19:00"
                  },
                  "member_id": {
                    "type": "number",
                    "example": "5"
                  },
                  "field_id": {
                    "type": "number",
                    "example": "1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/bookings/{id}": {
      "get": {
        "summary": "Get a booking by their ID",
        "description": "Return a booking",
        "tags": ["Bookings"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the booking"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "summary": "Update a booking by their ID",
        "description": "Return the booking updated",
        "tags": ["Bookings"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the booking"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-06-09 21:00"
                  },
                  "member_id": {
                    "type": "number",
                    "example": "5"
                  },
                  "field_id": {
                    "type": "number",
                    "example": "2"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a booking by their ID",
        "description": "Return no content if deleted correctly",
        "tags": ["Bookings"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the booking"
          }
        ],
        "responses": {
          "204": {
            "description": "No content",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/bookings/info": {
      "get": {
        "summary": "Get a list of bookings for a specific day",
        "description": "Return a list of bookings with all the information about them",
        "tags": ["Bookings"],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2024-06-09"
            },
            "required": true,
            "description": "Date to search for bookings"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    }
  }
}
